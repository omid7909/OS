#include<iostream>
using namespace std;

struct Process
{
    int pid;
    int AT;
    int BT;
    int CT;
    int TAT;
    int WT;

};
void findCT(Process proc[],int n)
{
    proc[0].CT =proc[0].BT;
    for(int i=1; i<n ; i++)
    {
     proc[i].CT = proc[i-1].CT + proc[i].BT;
    }
}
void findTAT(Process proc[],int n)
{
    for(int i=0; i<n; i++)
    {
        proc[i].TAT = proc[i].CT - proc[i].AT;
    }
}
void findWT(Process proc[], int n)
{
    proc[0].WT = 0;
    for(int i=1; i<n; i++)
    {
        proc[i].WT = proc[i].TAT - proc[i].BT;
    }
}
void findFCFS(Process proc[], int n)
{
    findCT(proc, n);
    findTAT(proc, n);
    findWT(proc,n);
}

void printFCFS(Process proc[],int n)
{
    cout<<"FCFC :"<<endl;
    cout<<"PID\t\tAT\tBT\tCT\tTAT\tWT"<<endl;
    for (int i = 0; i < n; i++)
    {
        cout<<proc[i].pid<<"\t\t"<<proc[i].AT<<"\t\t"
        <<proc[i].BT<<"\t\t"<<proc[i].CT<<"\t\t"<<proc[i].TAT<<"\t\t"<<proc[i].WT<<endl;
    }

}


int main()
{
    int n = 5;
    Process proc[n] = {{1,0,5},{2,1,3},{3,2,2},{4,3,4},{5,4,1}};
    findFCFS(proc, n);
    printFCFS(proc,n);
    return 0;
}
