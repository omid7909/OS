#include<bits/stdc++.h>
using namespace std;

struct Process
{
    int pid;
    int AT;
    int BT;
    int CT;
    int TAT;
    int WT;

};
void findSJF(Process proc[], int n)
{
    int remainingTime[n];
    for (int i = 0; i < n; i++)
    {
        remainingTime[i]= proc[i].BT;

    }
    int currentTime = 0;
    int complete = 0;
    int shortest = 0;
    int minBurst = 9999;
    while(complete<n)
    {
        minBurst = 9999;
        for (int i = 0; i < n; i++)
        {
            if(proc[i].AT<=currentTime && remainingTime[i]<minBurst && remainingTime[i]>0)
            {
                minBurst = remainingTime[i];
                shortest = i;
            }
        }
        remainingTime[shortest]--;
        if(remainingTime[shortest]==0)
        {
            complete++;
            proc[shortest].CT = currentTime+1;
            proc[shortest].TAT = proc[shortest].CT - proc[shortest].AT;
            proc[shortest].WT = proc[shortest].TAT - proc[shortest].BT;

        }
        currentTime++ ;
    }
}
void display(Process proc[],int n)
{
    cout<<"SJF :"<<endl;
    cout<<"PID\t\tAT\t\tBT\t\tCT\t\tTAT\t\tWT"<<endl;
    for (int i = 0; i < n; i++)
    {
        cout<<proc[i].pid<<"\t\t"<<proc[i].AT<<"\t\t"
            <<proc[i].BT<<"\t\t"<<proc[i].CT<<"\t\t"<<proc[i].TAT<<"\t\t"<<proc[i].WT<<endl;
    }
    cout<<endl;

}

int main()
{
    int n=5;
    Process proc[n] ={{1,0,5},{2,1,3},{3,2,2},{4,3,4},{5,4,1}};
;
    //cout<<"Process Detail:";
   /* for (int i = 0; i < n; i++)
    {
        cout<<"Enter Process: "<<i<<endl;
        cin>>proc[i].pid>>proc[i].AT>>proc[i].BT;
    }*/
    findSJF(proc,n);
    display(proc,n);


    return 0;
}
